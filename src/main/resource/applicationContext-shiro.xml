<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 	   xmlns:context="http://www.springframework.org/schema/context"
 	   xmlns:tx="http://www.springframework.org/schema/tx"
 	   xmlns:aop="http://www.springframework.org/schema/aop"
 	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 	   xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       					   http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       					   http://www.springframework.org/schema/aop
       					   http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       					   http://www.springframework.org/schema/context
            			   http://www.springframework.org/schema/context/spring-context-4.3.xsd
            			   http://www.springframework.org/schema/tx  
            			   http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
            			   http://www.springframework.org/schema/cache 
            			   http://www.springframework.org/schema/cache/spring-cache-4.3.xsd" default-lazy-init="true">
	
 	
 	<!-- shiro对ehcache的缓存管理直接使用spring的缓存工厂 -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> 
	    <property name="cacheManager" ref="cacheManagerFactory" />
	</bean>	
	
	<bean id="credentialsMatcher" class="cn.promore.bf.shiro.credential.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="shiroCacheManager"/>
		<property name="hashAlgorithmName" value="MD5"/>
		<property name="hashIterations" value="1"/>
		<property name="storedCredentialsHexEncoded" value="true"/>
	</bean>
	
	<!--自定义Realm 继承自AuthorizingRealm -->
	<bean id="myRealm" class="cn.promore.bf.shiro.extend.MyRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
	    <property name="cachingEnabled" value="true"/>  
	    <property name="authenticationCachingEnabled" value="true"/>  
	    <property name="authenticationCacheName" value="applicationBeanCache"/>
	    <property name="permissionResolver" ref="portalWildPermissionResolver"/> 
	    <!--  
	    <property name="authorizationCachingEnabled" value="true"/>  
	    <property name="authorizationCacheName" value="applicationBeanCache"/> 
	    --> 	
	</bean>
	
	<bean id="portalWildPermissionResolver" class="cn.promore.bf.shiro.extend.PortalWildPermissionResolver"/>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义realm -->
		<property name="realm" ref="myRealm" />
		<property name="cacheManager" ref="shiroCacheManager"/>
		<!-- <property name="sessionManager" ref="sessionManager"/> -->
	</bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.html" />
		<property name="successUrl" value="/index.html" />
		<property name="unauthorizedUrl" value="/login.html" />
		<property name="filterChainDefinitions">
			<value>
				/skins/*/css/** = anon
				/skins/*/images/** = anon
				/js/** = anon
				/editor/** = anon
				/monitoring=anon
				/validAction.huzd = anon
				/userAction!login.huzd = anon
				/app-report-*.html = anon
				/reportInfoAction!view.huzd = anon
				/reportInfoAction!loadDate.huzd = anon
				/widgetDataAction!loadData.huzd = anon
				/reportInfoAction!download.huzd = anon
				/sockjs/systemWS/**=anon
				/install/**=anon
				/** = authc
			</value>
		</property>
	</bean>
	

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
    	<property name="proxyTargetClass" value="true"/>
    </bean> 
    <!-- <aop:config proxy-target-class="true"/> -->
    
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"></property>  
    </bean>  

	<!-- securityManager -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
	
	<!-- 会话ID生成器
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
     -->
	<!-- 会话DAO
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    -->
	<!-- 会话管理器 
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>-->
					        <!-- <property name="sessionValidationSchedulerEnabled" value="true"/> -->
					       <!--  <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> -->
        <!-- <property name="sessionDAO" ref="sessionDAO"/> -->
					        <!-- <property name="sessionIdCookieEnabled" value="true"/> -->
					        <!-- <property name="sessionIdCookie" ref="sessionIdCookie"/> -->
    <!-- </bean> -->    
	
</beans>